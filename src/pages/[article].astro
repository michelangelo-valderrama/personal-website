---
import type { GetStaticPaths } from "astro"
import { getCollection, type CollectionEntry } from "astro:content"
import { ArrowLeft } from "lucide"
import Root from "@/layouts/Root.astro"
import Layout from "@/layouts/Layout.astro"
import Prose from "@/components/Prose.astro"
import SEO from "@/components/seo/SEO.astro"
import LucideIcon from "@/components/LucideIcon.astro"
import { SITE } from "@/consts"
import ArticleSEO from "@/components/seo/ArticleSEO.astro"
import { parseArticleImage } from "@/utils"
import { NewsletterForm } from "@/components/newsletter/form"

export const getStaticPaths = (async () => {
  const articles = await getCollection("articles")
  return articles.map((a) => ({
    params: { article: a.slug },
    props: a,
  }))
}) satisfies GetStaticPaths

type Props = CollectionEntry<"articles">

const { render, data } = Astro.props
const { Content, remarkPluginFrontmatter } = await render()

const image = parseArticleImage(Astro.props)
---

<Root>
  <SEO
    slot="meta"
    title={`${data.title} - ${SITE.TITLE}`}
    description={data.description}
    image={{ src: image, alt: data.title }}
  />
  <ArticleSEO slot="meta" article={Astro.props} {image} />
  <link
    slot="meta"
    href="https://cdn.jsdelivr.net/npm/katex@0.16.8/dist/katex.min.css"
    rel="stylesheet"
  />
  <Layout class="pt-24 md:pt-32 mb-40 md:mb-[50vh]">
    <div class="mb-6">
      <a
        href="/"
        class="inline-flex items-center gap-x-2 text-muted-foreground hover:text-accent-foreground transition-colors py-2 px-1 font-semibold"
      >
        <LucideIcon icon={ArrowLeft} class="size-5" />
        <span>Volver</span>
      </a>
    </div>
    <article>
      <header class="mb-10 flex flex-col gap-y-2">
        <h1 class="font-serif text-4xl font-semibold lg:text-5xl">
          {data.title}
        </h1>
        <div
          class="text-muted-foreground text-xs md:text-sm flex items-center gap-x-2 *:border *:px-2.5 *:py-0.5 *:rounded-full"
        >
          <span>
            <time datetime={data.date.toISOString()}>
              {data.date.toLocaleDateString("es", { dateStyle: "medium" })}
            </time>
          </span>
          <span>{remarkPluginFrontmatter.minutesRead}</span>
        </div>
      </header>
      <Prose>
        <Content />
      </Prose>
    </article>
    <div class="bg-muted/40 rounded-lg px-4 pb-6 pt-8 border shadow mt-12 md:mt-16 max-w-xl mx-auto">
      <section class="mb-8 md:mb-12">
        <h2 class="text-2xl font-semibold">Newsletter</h2>
        <p class="text-muted-foreground text-sm">¿Quieres estar atento a mis futuros artículos?</p>
      </section>
      <NewsletterForm responsive client:visible />
    </div>
  </Layout>
</Root>
