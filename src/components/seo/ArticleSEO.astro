---
import type { CollectionEntry } from "astro:content"
import { SITE } from "@/consts"

interface Props {
  article: CollectionEntry<"articles">
  image: {
    src: string | URL
    alt: string
    width: number | string
    height: number | string
  }
}

const {
  article: { data },
  image,
} = Astro.props

const articleSchema = {
  "@context": "https://schema.org",
  "@type": "Article",
  headline: data.title,
  image: [image.src],
  datePublished: data.date,
  dateModified: data.date,
  author: [
    {
      "@type": "Person",
      name: SITE.AUTHOR,
      url: Astro.site,
    },
  ],
}

const postSchema = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  mainEntityOfPage: {
    "@type": "WebPage",
    "@id": Astro.url,
    name: SITE.TITLE,
  },
  headline: data.title,
  description: data.description,
  image: [image.src],
  datePublished: data.date,
  dateModified: data.date,
  author: [
    {
      "@type": "Person",
      name: SITE.AUTHOR,
      url: Astro.site,
    },
  ],
  publisher: {
    "@type": "Organization",
    name: SITE.TITLE,
    logo: {
      "@type": "ImageObject",
      url: image.src.toString(),
    },
  },
}

const breadcrumbSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    {
      "@type": "ListItem",
      position: 1,
      item: {
        "@id": Astro.url,
        name: data.title,
      },
    },
  ],
}
---

<meta property="article:publisher" content={Astro.site} />
<meta property="article:author" content={SITE.AUTHOR} />
{
  data.tags
    ? data.tags.map((tag) => <meta property="article:tag" content={tag} />)
    : null
}
<meta property="article:published_time" content={data.date.toString()} />
<meta property="article:modified_time" content={data.date.toString()} />

<script
  is:inline
  type="application/ld+json"
  set:html={JSON.stringify(articleSchema)}
/>
<script
  is:inline
  type="application/ld+json"
  set:html={JSON.stringify(postSchema)}
/>
<script
  is:inline
  type="application/ld+json"
  set:html={JSON.stringify(breadcrumbSchema)}
/>
