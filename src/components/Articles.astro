---
import { getCollection, type CollectionEntry } from "astro:content"
import ArticleLink from "./ArticleLink.astro"
import ArticleYearGroup from "./ArticleYearGroup.astro"
import Section from "./Section.astro"
import { groupBy } from "@/utils"
import { Newsletter } from "./newsletter"

const articles = (await getCollection("articles"))
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
  .map((a) => ({
    ...a,
    year: a.data.date.getFullYear(),
  }))

const articlesByYear: {
  [year: string]: CollectionEntry<"articles">[]
} = groupBy(articles, "year")

const years = Object.keys(articlesByYear).sort(
  (a, b) => parseInt(b) - parseInt(a)
)
---

<Section as="section" class="mt-20">
  <div class="mb-4 flex items-center justify-between">
    <h2 class="font-semibold md:text-lg">Art√≠culos</h2>
    <Newsletter client:load />
  </div>
  <div>
    {
      years.map((year) => (
        <ArticleYearGroup {year}>
          {articlesByYear[year].map(({ data: { title, date }, slug }) => (
            <ArticleLink {title} {date} {slug} />
          ))}
        </ArticleYearGroup>
      ))
    }
  </div>
</Section>
